<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <joint name="camera_joint" type="fixed">
        <parent link="j2n6s300_end_effector"/>
        <child link="camera_link"/>
        <origin xyz="0 0 0" rpy="${pi} ${-pi/2} 0"/>
    </joint>

    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.010 0.03 0.03"/>
            </geometry>
            <material name="red">
                <color rgba= "1 0 0 1"/>
            </material>
        </visual>
    </link>


    <joint name="camera_optical_joint" type="fixed">
        <parent link="camera_link"/>
        <child link="camera_link_optical"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <joint name="camera_coordinate_joint" type="fixed">
        <parent link="camera_link"/>
        <child link="camera_coordinate_system"/>
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    </joint>

    <link name="camera_link_optical"></link>
    <link name="camera_coordinate_system"></link>



    <gazebo reference="camera_link">
        <material>Gazebo/Red</material>

        <!-- <sensor name="camera" type="depth">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_link_optical</frame_name>
                <min_depth>0.01</min_depth>
                <max_depth>100.0</max_depth>
            </plugin>
        </sensor> -->

    <sensor name="world" type="depth">
        <!-- openni plugin has the x pointing towards the scene, so rotate to have z -->
        <pose>0.0 0.0 1.0 0.0 -1.5708 1.5708</pose>
        <!-- <pose> 0 0 0 0 0 0 </pose> -->
        <camera>
            <horizontal_fov>0.74839718</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
                <!-- <format>L_INT8</format> -->
            </image>
            <clip>
                <near>0.01</near>
                <far>100.0</far>
            </clip>
            <noise>
                <type>gaussian</type>
                <mean>0.5</mean>
                <stddev>1.0</stddev>
            </noise>
        </camera>
        <plugin name="kinect_plugin" filename="libgazebo_ros_openni_kinect.so">
            <baseline>0.1</baseline>
            <alwaysOn>true</alwaysOn>
            <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
            <updateRate>0.0</updateRate>
            <cameraName>kinect_test</cameraName>
            <imageTopicName>/3d_image/image_raw</imageTopicName>
            <cameraInfoTopicName>/3d_image/camera_info</cameraInfoTopicName>
            <depthImageTopicName>/3d_image/image_raw_depth</depthImageTopicName>
            <depthImageInfoTopicName>/3d_image/camera_info</depthImageInfoTopicName>
            <pointCloudTopicName>/3d_image/3d_cloud</pointCloudTopicName>
            <frameName>camera_coordinate_system</frameName>
            <pointCloudCutoff>0.01</pointCloudCutoff>
            <pointCloudCutoffMax>100.0</pointCloudCutoffMax>
        </plugin>
        <always_on>true</always_on>
        <update_rate>30.0</update_rate>
    </sensor>



    </gazebo>

</robot>